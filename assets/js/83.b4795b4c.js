(window.webpackJsonp=window.webpackJsonp||[]).push([[83],{535:function(s,t,a){"use strict";a.r(t);var n=a(1),e=Object(n.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"前端工程化具体内容"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#前端工程化具体内容"}},[s._v("#")]),s._v(" 前端工程化具体内容")]),s._v(" "),t("h2",{attrs:{id:"何为前端工程化"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#何为前端工程化"}},[s._v("#")]),s._v(" 何为前端工程化")]),s._v(" "),t("p",[s._v("前端工程化是指将软件工程的原理和方法应用到前端开发中，以提高开发效率、代码质量和可维护性。随着 Web 应用的复杂度不断增加，传统的前端开发方式已经难以满足需求，因此引入了工程化的概念来更好地管理和优化前端开发流程。前端工程化主要包括以下几个方面：")]),s._v(" "),t("ol",[t("li",[t("p",[t("strong",[s._v("项目构建工具")]),t("br"),s._v("\n使用自动化构建工具（如 "),t("code",[s._v("Webpack")]),s._v(", "),t("code",[s._v("Vite")]),s._v(", "),t("code",[s._v("Parcel")]),s._v(" 等）来处理和打包前端资源（JavaScript, CSS, 图片等），从而简化开发流程，提升开发体验。这些工具通常支持模块化开发、代码压缩、混淆、热更新等功能。")])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("模块化开发")]),t("br"),s._v("\n采用模块化的开发模式（如 "),t("code",[s._v("ES6")]),s._v(" 模块、"),t("code",[s._v("CommonJS")]),s._v("、"),t("code",[s._v("AMD")]),s._v(" 等），可以将代码拆分为更小、更易于管理的部分，有助于团队协作和代码复用。每个模块负责单一功能，并且通过明确的接口与其他模块交互。")])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("组件化开发")]),t("br"),s._v("\n基于组件的思想构建用户界面，比如 "),t("code",[s._v("React")]),s._v("、"),t("code",[s._v("Vue")]),s._v(" 和 "),t("code",[s._v("Angular")]),s._v(" 中的组件。组件是独立且可复用的 UI 构建块，它们封装了自身的逻辑和样式，可以在不同的页面或应用之间共享。")])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("版本控制")]),t("br"),s._v("\n利用 Git 或其他版本控制系统来跟踪代码的变化历史，方便团队成员之间的协作开发，确保项目的稳定性和可回溯性。")])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("持续集成/持续部署 (CI/CD)")]),s._v(" "),t("br"),s._v("\n设置 "),t("code",[s._v("CI/CD")]),s._v(" 流程自动化测试、构建和部署过程，保证每次代码变更都能经过严格的测试并顺利上线，减少人工操作带来的风险。")])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("静态代码分析")]),t("br"),s._v("\n通过 "),t("code",[s._v("ESLint")]),s._v("、"),t("code",[s._v("Prettier")]),s._v(" 等工具进行静态代码分析，帮助开发者遵循编码规范，提前发现潜在的问题，如语法错误、风格不一致等。")])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("性能优化")]),t("br"),s._v("\n采取各种措施优化 Web 应用的加载速度和运行性能，例如图片懒加载、服务端渲染（"),t("code",[s._v("SSR")]),s._v("）、客户端缓存策略、减少 "),t("code",[s._v("HTTP")]),s._v(" 请求次数、使用 "),t("code",[s._v("CDN")]),s._v(" 分发静态资源等。")])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("文档生成与维护")]),t("br"),s._v("\n保持良好的文档习惯，包括但不限于 API 文档、架构设计文档、开发指南等，这不仅有助于新人快速上手项目，也能为后续的维护提供便利。")])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("依赖管理")]),t("br"),s._v("\n合理地管理和更新第三方库依赖，确保项目所使用的库是最新的同时避免引入不必要的安全漏洞。常用工具如 "),t("code",[s._v("pnpm")]),s._v("、"),t("code",[s._v("npm")]),s._v("、"),t("code",[s._v("yarn")]),s._v(" 可以有效地管理 JavaScript 包依赖。")])])]),s._v(" "),t("h2",{attrs:{id:"何为模块化"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#何为模块化"}},[s._v("#")]),s._v(" 何为模块化")]),s._v(" "),t("p",[s._v("模块化是一种软件设计原则，它提倡将一个复杂的系统分解为多个独立的、可复用的部分（即模块），每个模块负责实现特定的功能或解决特定的问题。通过这种方式，可以简化系统的复杂性，提高代码的组织性和可维护性。在前端开发中，模块化具体表现为以下几个方面：")]),s._v(" "),t("ol",[t("li",[t("p",[t("strong",[s._v("定义清晰的接口")]),t("br"),s._v("\n每个模块都应该有明确的输入和输出，这样其他部分的代码就可以方便地调用该模块而不需要了解其内部工作原理。这种做法提高了代码的解耦程度，使得各个模块之间的依赖关系更加松散。")])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("功能单一性")]),t("br"),s._v("\n遵循“单一职责原则”，确保每个模块只做一件事并且做好。如果一个模块需要处理多种任务，则应该考虑将其拆分成更小的模块。这样做有助于减少错误的发生，并且便于测试和调试。")])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("易于测试")]),t("br"),s._v("\n由于模块是独立存在的，因此可以单独对其进行单元测试。这不仅加快了测试速度，也更容易定位问题所在。此外，良好的模块化设计还可以促进集成测试，以验证不同模块之间的交互是否正确。")])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("高内聚低耦合")]),t("br"),s._v("\n高内聚意味着模块内部的组件紧密相关，专注于完成某一特定功能；低耦合则表示模块之间相互依赖较少，改变一个模块不会对其他模块造成太大影响。这样的结构有利于系统的扩展和维护。")])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("复用性")]),t("br"),s._v("\n一旦某个模块被创建并经过充分测试后，可以在不同的项目或者同一项目的不同地方重复使用这个模块，从而避免重复劳动，提升开发效率。")])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("代码分割与懒加载")]),t("br"),s._v("\n在现代前端框架（如 Vue, React）中，可以通过路由级别的代码分割和懒加载技术来实现按需加载模块，减少初始加载时间，优化用户体验。")])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("模块化的实现方式")]),t("br")])])]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("CommonJS")]),s._v("：Node.js 默认采用的模块化方案，基于文件的方式定义模块，使用require() 加载模块。")]),s._v(" "),t("li",[t("strong",[s._v("AMD (Asynchronous Module Definition)")]),s._v("：异步加载模块的标准，主要用于浏览器")]),s._v(" "),t("li",[t("strong",[s._v("ES6 Modules")]),s._v("：ECMAScript 标准引入的原生模块化解决方案，使用import 和export 关键字进行模块导入导出。这是目前最广泛接受和支持的模块化标准之一。")])]),s._v(" "),t("h2",{attrs:{id:"模块化标准以及解决什么问题"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#模块化标准以及解决什么问题"}},[s._v("#")]),s._v(" 模块化标准以及解决什么问题")]),s._v(" "),t("h3",{attrs:{id:"民间-社区标准"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#民间-社区标准"}},[s._v("#")]),s._v(" 民间/社区标准")]),s._v(" "),t("p",[s._v("模块化标准是指在软件开发中，为了确保不同模块之间可以正确交互、共享资源，并且能够被有效地管理和维护而设立的一套规则和协议。特别是在前端开发领域，JavaScript 的模块化标准经历了多个阶段的发展。以下是几种主流的 JavaScript 模块化标准：")]),s._v(" "),t("ol",[t("li",[t("strong",[s._v("CommonJS")]),s._v(" "),t("br")])]),s._v(" "),t("ul",[t("li",[s._v("简介：这是 Node.js 中默认使用的模块系统。它基于文件的方式定义模块，每个文件被视为一个独立的模块")]),s._v(" "),t("li",[s._v("导入导出：\n"),t("ol",[t("li",[s._v("导入模块使用"),t("code",[s._v("require()")]),s._v(" 函数。")]),s._v(" "),t("li",[s._v("导出模块成员通过"),t("code",[s._v("module.exports")]),s._v(" 或直接修改"),t("code",[s._v("exports")]),s._v(" 对象。")])])]),s._v(" "),t("li",[s._v("特点：同步加载模块，适用于服务器端环境。")])]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 导出模块")]),s._v("\nmodule"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function-variable function"}},[s._v("exports")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  console"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Hello from CommonJS'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 导入模块")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" myModule "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("require")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'./myModule'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])]),t("ol",{attrs:{start:"2"}},[t("li",[t("strong",[s._v("AMD (Asynchronous Module Definition)")]),s._v(" "),t("br")])]),s._v(" "),t("ul",[t("li",[s._v("简介：专门为浏览器端设计的一种异步加载模块的标准，常与 "),t("code",[s._v("RequireJS")]),s._v(" 一起使用。")]),s._v(" "),t("li",[s._v("导入导出：\n"),t("ol",[t("li",[s._v("使用"),t("code",[s._v("define()")]),s._v(" 定义模块，接受依赖作为参数。")]),s._v(" "),t("li",[t("code",[s._v("require()")]),s._v(" 用来加载模块。")])])]),s._v(" "),t("li",[s._v("特点：支持异步加载，适合浏览器环境下动态加载模块。")])]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 定义模块")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("define")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'dependency'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("dependency")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    console"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Hello from AMD'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 加载模块")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("require")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'module'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("module")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("module")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br")])]),t("ol",{attrs:{start:"3"}},[t("li",[t("strong",[s._v("UMD (Universal Module Definition)")]),s._v(" "),t("br")])]),s._v(" "),t("ul",[t("li",[s._v("简介：UMD 是一种兼容多种模块系统的格式，旨在同时支持 CommonJS、AMD 和全局变量（即浏览器中的"),t("code",[s._v("<script>")]),s._v(" 标签）。")]),s._v(" "),t("li",[s._v("特点：提供了跨平台的支持，使得同一个模块可以在不同的环境中无缝工作。")])]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("root"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" factory")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("typeof")]),s._v(" define "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'function'")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" define"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("amd"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// AMD")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("define")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'b'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" factory"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("elseif")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("typeof")]),s._v(" exports "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'object'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// Node, CommonJS-like")]),s._v("\n    module"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("exports "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("factory")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("require")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'b'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// Browser globals (root is window)")]),s._v("\n    root"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("returnExports "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("factory")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("root"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("b"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("b")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// module implementation")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br")])]),t("h3",{attrs:{id:"官方标准"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#官方标准"}},[s._v("#")]),s._v(" 官方标准")]),s._v(" "),t("ol",[t("li",[t("strong",[s._v("ES6 Modules (ECMAScript 2015 Modules)")]),s._v(" 编译时方案  "),t("br")])]),s._v(" "),t("ul",[t("li",[s._v("简介：这是 ECMAScript 规范中正式引入的原生模块化方案，已经被所有现代浏览器广泛支持。")]),s._v(" "),t("li",[s._v("导入导出：\n"),t("ol",[t("li",[s._v("使用"),t("code",[s._v("import")]),s._v(" 关键字导入模块。")]),s._v(" "),t("li",[s._v("使用"),t("code",[s._v("export")]),s._v(" 关键字导出模块成员。")])])]),s._v(" "),t("li",[s._v("特点：静态分析友好，允许工具链进行优化；支持按需加载（Tree Shaking），有助于减少打包体积。")])]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 导出模块")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("export")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("greet")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  console"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Hello from ES6 Modules'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 默认导出")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("export")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("default")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Greeter")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 导入模块")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" greet "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'./greet.js'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" Greeter "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'./Greeter.js'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br")])]),t("h3",{attrs:{id:"当前趋势"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#当前趋势"}},[s._v("#")]),s._v(" 当前趋势")]),s._v(" "),t("p",[s._v("目前，"),t("code",[s._v("ES6 Modules")]),s._v("（编译时） 已经成为最主流的 "),t("code",[s._v("JavaScript")]),s._v(" 模块化标准，因为它是由 ECMAScript 标准委员会制定的官方规范，得到了广泛的社区支持和技术栈集成。大多数现代前端框架（如 "),t("code",[s._v("Vue")]),s._v(", "),t("code",[s._v("React")]),s._v(", "),t("code",[s._v("Angular")]),s._v(" 等）以及构建工具（如 "),t("code",[s._v("Webpack")]),s._v(", "),t("code",[s._v("Vite")]),s._v(", "),t("code",[s._v("Parcel")]),s._v(" 等）都内置了对 ES6 Modules 的支持。因此，如果你正在启动一个新的项目，推荐优先考虑使用 "),t("code",[s._v("ES6 Modules")]),s._v("。CommonJS（运行时）　也很庞大随着ｎｏｄｅｊｓ的发展而发展，其他几种目前不是很推荐使用了；")]),s._v(" "),t("h2",{attrs:{id:"es6-modules-和-commonjs-之间的一些主要区别"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#es6-modules-和-commonjs-之间的一些主要区别"}},[s._v("#")]),s._v(" ES6 Modules 和 CommonJS 之间的一些主要区别")]),s._v(" "),t("ol",[t("li",[t("strong",[s._v("加载机制")])])]),s._v(" "),t("ul",[t("li",[s._v("CommonJS：\n"),t("ul",[t("li",[s._v("同步加载："),t("code",[s._v("CommonJS")]),s._v(" 模块是同步加载的，这意味着当"),t("code",[s._v("require()")]),s._v(" 被调用时，程序会阻塞并等待模块加载完成。")]),s._v(" "),t("li",[s._v("运行时解析：依赖关系是在代码执行期间动态解析的，即当你调用"),t("code",[s._v("require()")]),s._v(" 函数时才加载模块。")])])]),s._v(" "),t("li",[s._v("ES6 Modules：\n"),t("ul",[t("li",[s._v("异步加载："),t("code",[s._v("ES6 Modules")]),s._v(" 支持静态分析和按需加载（例如通过"),t("code",[s._v('<script type="module">')]),s._v(" 标签），因此它们可以异步加载，不会阻塞主线程。")]),s._v(" "),t("li",[s._v("编译时解析：依赖关系在编译时解析，这意味着在代码执行之前，所有模块的依赖关系就已经被解析并确定。")])])])]),s._v(" "),t("ol",{attrs:{start:"2"}},[t("li",[t("strong",[s._v("导入导出语法")])])]),s._v(" "),t("ul",[t("li",[s._v("CommonJS：\n"),t("ul",[t("li",[s._v("导出：使用"),t("code",[s._v("module.exports")]),s._v(" 或"),t("code",[s._v("exports")]),s._v(" 对象来导出成员。")]),s._v(" "),t("li",[s._v("导入：使用"),t("code",[s._v("require()")]),s._v(" 函数来导入模块。")])])]),s._v(" "),t("li",[s._v("ES6 Modules：\n"),t("ul",[t("li",[s._v("导出：使用"),t("code",[s._v("export")]),s._v(" 关键字来导出函数、类或变量；也可以使用"),t("code",[s._v("export default")]),s._v(" 来定义默认导出。")]),s._v(" "),t("li",[s._v("导入：使用"),t("code",[s._v("import")]),s._v(" 关键字来导入模块，支持命名导入、默认导入等。")])])])]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 导出模块 (ES6 Modules)")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("export")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("greet")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  console"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Hello from ES6 Modules'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("export")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("default")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Greeter")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 导入模块 (ES6 Modules)")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" greet "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'./greet.js'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" Greeter "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'./Greeter.js'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br")])]),t("ol",{attrs:{start:"3"}},[t("li",[t("strong",[s._v("单例 vs 多例")])])]),s._v(" "),t("ul",[t("li",[t("code",[s._v("CommonJS")]),s._v("：每次require() 同一个模块都会返回同一个实例，即模块是单例模式。")]),s._v(" "),t("li",[t("code",[s._v("ES6 Modules")]),s._v("：每个模块都是一个新的实例，除非显式地共享状态。这使得模块的行为更加可预测，减少了意外的副作用。")])]),s._v(" "),t("ol",{attrs:{start:"4"}},[t("li",[t("strong",[s._v("互操作性")])])]),s._v(" "),t("ul",[t("li",[t("code",[s._v("CommonJS")]),s._v("：Node.js 原生支持 CommonJS，但可以通过 Babel 或其他转译器将 ES6 Modules 转换为 CommonJS 以在 Node.js 中使用。")]),s._v(" "),t("li",[t("code",[s._v("ES6 Modules")]),s._v("：现代浏览器原生支持 ES6 Modules，但在 Node.js 中需要特定的配置（如.mjs 文件扩展名或启用实验性的--experimental-modules 标志）。不过，从 Node.js v12 开始，对 ES6 Modules 的支持逐渐增强，到了 Node.js v14 及以上版本，这种支持变得更加稳定和成熟。")])]),s._v(" "),t("ol",{attrs:{start:"5"}},[t("li",[t("strong",[s._v("性能与优化")])])]),s._v(" "),t("ul",[t("li",[t("code",[s._v("ES6 Modules")]),s._v("：由于其静态解析特性，构建工具可以更好地理解模块之间的依赖关系，从而实现更高效的打包和优化策略，如 Tree Shaking。")]),s._v(" "),t("li",[t("code",[s._v("CommonJS")]),s._v("：因为依赖关系是在运行时确定的，所以很难在编译阶段进行类似的优化。")])]),s._v(" "),t("h3",{attrs:{id:"小结"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#小结"}},[s._v("#")]),s._v(" 小结")]),s._v(" "),t("p",[s._v("尽管 "),t("code",[s._v("CommonJS")]),s._v(" 在"),t("code",[s._v("Node.js")]),s._v(" 环境中依然非常重要，并且对于服务器端开发来说仍然是一个非常强大的选择，但 "),t("code",[s._v("ES6 Modules")]),s._v(" 因其更好的性能、更灵活的语法以及广泛的社区支持，已经成为现代前端开发的首选。如果你正在启动一个新的项目，尤其是在客户端应用中，推荐优先考虑使用 "),t("code",[s._v("ES6 Modules")]),s._v("。然而，在某些情况下，比如处理遗留系统或特定的 "),t("code",[s._v("Node.js")]),s._v(" 模块时，你可能仍然需要使用 "),t("code",[s._v("CommonJS")]),s._v("。")]),s._v(" "),t("h2",{attrs:{id:"包管理器-package-manager"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#包管理器-package-manager"}},[s._v("#")]),s._v(" 包管理器 (Package Manager)")]),s._v(" "),t("p",[s._v("包管理器是用于自动化处理软件包（库、框架等）的安装、更新、配置和删除的工具。在 JavaScript 和 Node.js 生态系统中，最常用的包管理器包括 "),t("code",[s._v("npm")]),s._v("、"),t("code",[s._v("Yarn")]),s._v(" 和 "),t("code",[s._v("pnpm")]),s._v("。它们简化了依赖管理和项目构建过程，使得开发者可以更专注于编写业务逻辑。")]),s._v(" "),t("ol",[t("li",[t("strong",[s._v("npm (Node Package Manager)")]),s._v(" "),t("br")])]),s._v(" "),t("ul",[t("li",[s._v("简介：npm 是 Node.js 的默认包管理器，也是世界上最大的软件注册表之一。它提供了丰富的命令行接口来管理依赖项，并且拥有庞大的社区支持。")]),s._v(" "),t("li",[s._v("特点：\n"),t("ul",[t("li",[s._v("安装全局或本地的 npm 包。")]),s._v(" "),t("li",[s._v("自动生成package.json 文件以记录项目的依赖关系。")]),s._v(" "),t("li",[s._v("支持脚本命令，允许你定义和运行自定义任务。")]),s._v(" "),t("li",[s._v("内置安全审计功能，帮助识别潜在的安全问题。")])])]),s._v(" "),t("li",[s._v("使用示例："),t("br")])]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 初始化一个新的 npm 项目")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" init \n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 安装一个依赖包到项目中")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 更新所有依赖包到最新版本")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" update\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 运行自定义脚本")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" run\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br")])]),t("ol",{attrs:{start:"2"}},[t("li",[t("strong",[s._v("Yarn")]),s._v(" "),t("br")])]),s._v(" "),t("ul",[t("li",[s._v("简介：由 Facebook 开发并维护，旨在解决 npm 在速度和安全性方面的一些局限性。Yarn 通过锁文件 (yarn.lock) 来确保不同环境中依赖的一致性。")]),s._v(" "),t("li",[s._v("特点：\n"),t("ul",[t("li",[s._v("更快的安装速度，得益于并行化下载和缓存机制。")]),s._v(" "),t("li",[s._v("确定性的安装，保证每次安装的结果相同。")]),s._v(" "),t("li",[s._v("提供了更好的离线模式支持。")])])]),s._v(" "),t("li",[s._v("使用示例："),t("br")])]),s._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 初始化一个新的 Yarn 项目")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("yarn")]),s._v(" init\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 安装一个依赖包到项目中")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("yarn")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 更新所有依赖包到最新版本")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("yarn")]),s._v(" upgrade\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 运行自定义脚本")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("yarn")]),s._v(" run\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br")])]),t("ol",{attrs:{start:"3"}},[t("li",[t("strong",[s._v("pnpm")]),s._v(" "),t("br")])]),s._v(" "),t("ul",[t("li",[s._v("简介：pnpm 是一种新型的包管理器，它解决了传统 npm 和 Yarn 在磁盘空间利用率上的不足，采用了一种称为“内容可寻址存储”的方法来存储依赖包。")]),s._v(" "),t("li",[s._v("特点：\n"),t("ul",[t("li",[s._v("极大地节省磁盘空间，因为相同的依赖只保存一份副本。")]),s._v(" "),t("li",[s._v("快速安装速度，同样利用了并行化下载。")]),s._v(" "),t("li",[s._v("与 npm 和 Yarn 兼容，可以直接替换现有工作流。")])])]),s._v(" "),t("li",[s._v("使用示例：")])]),s._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 初始化一个新的 pnpm 项目")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("pnpm")]),s._v(" init\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 安装一个依赖包到项目中")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("pnpm")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 更新所有依赖包到最新版本")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("pnpm")]),s._v(" update\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 运行自定义脚本")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("pnpm")]),s._v(" run\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br")])]),t("h3",{attrs:{id:"选择合适的包管理器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#选择合适的包管理器"}},[s._v("#")]),s._v(" 选择合适的包管理器")]),s._v(" "),t("p",[s._v("选择哪种包管理器取决于你的具体需求和技术栈偏好。对于大多数新项目来说，npm 和 pnpm 是非常好的选择，因为它们都提供了出色的性能和广泛的社区支持。如果你需要特别关注依赖一致性或更快的安装速度，那么 Yarn 或 pnpm 可能更适合你。此外，随着 pnpm 的快速发展及其独特的内容可寻址存储特性，在大型项目或多团队协作环境中，pnpm 正变得越来越受欢迎。")]),s._v(" "),t("ol",[t("li",[t("strong",[s._v("npm 和 pnpm 的出色性能与广泛支持")]),s._v(" "),t("br")])]),s._v(" "),t("ul",[t("li",[s._v("npm：作为 Node.js 的默认包管理器，npm 拥有一个庞大的生态系统和活跃的社区。它不仅提供了丰富的命令行接口来管理依赖项，还拥有内置的安全审计功能，帮助识别潜在的安全问题。npm 的"),t("code",[s._v("package-lock.json")]),s._v("文件确保了不同环境中依赖的一致性。")]),s._v(" "),t("li",[s._v("pnpm："),t("code",[s._v("pnpm")]),s._v(" 是一个快速且节省磁盘空间的包管理工具，它通过内容可寻址存储（CAS）机制来避免重复下载相同的依赖包，从而提高了安装速度并减少了磁盘使用量。对于大型项目或多团队协作环境，"),t("code",[s._v("pnpm")]),s._v(" 的优势尤为明显，因为它能够有效减少多项目间的依赖冗余，并且对 "),t("code",[s._v("monorepos")]),s._v(" 提供了良好的支持。")])]),s._v(" "),t("ol",{attrs:{start:"2"}},[t("li",[t("strong",[s._v("Yarn 和 pnpm 的依赖一致性及安装速度")]),s._v(" "),t("br")])]),s._v(" "),t("ul",[t("li",[s._v("Yarn：Yarn 引入了"),t("code",[s._v("yarn.lock")]),s._v(" 文件，确保了不同环境中依赖的一致性。它的并行化下载机制显著提升了安装速度，尤其是在网络条件较好的情况下。此外，Yarn 支持离线模式，即使没有互联网连接也能安装之前缓存过的依赖包。")]),s._v(" "),t("li",[s._v("pnpm：除了上述提到的优点外，pnpm 还以其高效的磁盘空间管理和安装性能著称。它采用了硬链接和符号链接的方式将依赖包安装到每个项目的"),t("code",[s._v("node_modules")]),s._v(" 目录下，这不仅加快了安装过程，也保证了依赖关系的清晰度，避免了嵌套过深的问题。")])]),s._v(" "),t("ol",{attrs:{start:"3"}},[t("li",[t("strong",[s._v("pnpm 在大型项目中的应用")]),s._v(" "),t("br"),s._v("\n随着 pnpm 的快速发展，越来越多的企业级项目开始采用它作为首选的包管理工具。"),t("code",[s._v("pnpm")]),s._v(" 的独特之处在于它可以有效地处理复杂的依赖关系，并且在多项目环境下表现出色。例如，在 "),t("code",[s._v("monorepo")]),s._v(" 架构中，"),t("code",[s._v("pnpm")]),s._v(" 能够很好地管理多个包之间的依赖，同时保持高效的工作流。")])]),s._v(" "),t("h2",{attrs:{id:"css原子化概念"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#css原子化概念"}},[s._v("#")]),s._v(" CSS原子化概念")]),s._v(" "),t("p",[s._v("CSS原子化（Atomic CSS）是一种CSS架构方式，它提倡将样式拆分为最小且独立的单位——即“原子”。每个原子类只包含一个或少数几个特定的样式属性，如颜色、边距、字体大小等。这些原子类可以组合起来创建复杂的样式效果，从而实现样式的模块化和复用性。与传统的面向组件的CSS编写方法不同，原子化CSS强调的是通过一系列小型、单一用途的类来构建页面，而非为每个UI组件定义专门的样式规则。")]),s._v(" "),t("h3",{attrs:{id:"核心特点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#核心特点"}},[s._v("#")]),s._v(" 核心特点")]),s._v(" "),t("ul",[t("li",[s._v("单一样式属性：每个类名通常对应一个具体的样式属性，比如.p-4代表padding: 4px;，这使得开发者能够直观地理解类的作用。")]),s._v(" "),t("li",[s._v("高度可复用：由于类是高度独立的，它们可以在不同的上下文中被自由组合使用，减少了重复定义样式的需求。")]),s._v(" "),t("li",[s._v("减少冗余代码：原子化CSS有助于消除不必要的CSS文件膨胀问题，因为它避免了大量未使用的样式规则堆积。")]),s._v(" "),t("li",[s._v("易于维护：当需要调整某个特定的样式时，只需更改相应的HTML标签上的类名即可，无需修改CSS文件本身。")]),s._v(" "),t("li",[s._v("基于视觉功能命名：类名往往直接反映了其在界面上的表现形式，例如.text-center表示文本居中显示。")])]),s._v(" "),t("h3",{attrs:{id:"css原子化解决方案"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#css原子化解决方案"}},[s._v("#")]),s._v(" CSS原子化解决方案")]),s._v(" "),t("p",[s._v("随着Web开发社区对高效、灵活的样式管理方案的需求增长，出现了多个优秀的CSS原子化框架和工具，其中最著名的包括：")]),s._v(" "),t("p",[t("code",[s._v("Tailwind CSS")])]),s._v(" "),t("p",[s._v("Tailwind CSS 是目前最受欢迎的功能优先型CSS框架之一。它提供了丰富的预设样式类库，允许开发者直接在HTML中组合这些类以快速搭建界面。Tailwind的设计理念非常符合原子化CSS的原则，它的类名简洁明了，并且支持自定义主题配置。此外，Tailwind还内置了大量的实用工具类，涵盖了从布局到动画的各种场景，极大地简化了前端开发流程。")]),s._v(" "),t("p",[t("code",[s._v("Windi CSS")]),s._v("\nWindi CSS 是另一个高效的原子化CSS框架，它的工作原理类似于Tailwind，但更加注重性能优化。Windi采用了按需生成策略，只有当某些样式类真正出现在HTML文档中时才会被编译进最终输出的CSS文件里，这样可以进一步降低资源消耗。同时，Windi也支持多种插件扩展，满足不同项目的个性化需求。")]),s._v(" "),t("p",[t("code",[s._v("UnoCSS")]),s._v("\n不同于前面提到的两个框架，UnoCSS更像是一个引擎而不是固定框架。它允许用户定义自己的原子化规则集，提供了极大的灵活性。UnoCSS的核心优势在于它可以与Vite等现代构建工具无缝集成，实现了真正的按需加载机制，确保只有必要的样式才会被打包进去。此外，UnoCSS还支持自动前缀添加、媒体查询等功能，帮助开发者轻松应对跨浏览器兼容性挑战。")]),s._v(" "),t("p",[t("code",[s._v("Basscss")]),s._v("\nBasscss 是一款轻量级的原子化CSS框架，旨在提供一组简单而有效的基础样式类。尽管它的规模较小，但对于那些追求极简风格的应用程序来说却是理想的选择。Basscss遵循了原子化CSS的核心思想，即通过少量的基础类构建出复杂多变的用户界面。不过，相比其他更全面的框架，Basscss提供的功能相对有限，更适合小型项目或者作为更大框架的一部分使用。")]),s._v(" "),t("p",[s._v("综上所述，CSS原子化不仅仅是一个理论上的概念，而是已经被广泛应用于实际项目中的有效实践。通过采用上述任何一个或多个框架，开发者可以获得更好的开发体验、更高的生产力以及更优质的用户体验。值得注意的是，虽然原子化CSS带来了诸多便利之处，但它也可能导致HTML标记变得冗长复杂维护困难，因此在选择是否采用此方法之前，应当充分考虑项目的具体情况和技术栈特性。")]),s._v(" "),t("h2",{attrs:{id:"构建工具和脚手架"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#构建工具和脚手架"}},[s._v("#")]),s._v(" 构建工具和脚手架")]),s._v(" "),t("h3",{attrs:{id:"vite"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#vite"}},[s._v("#")]),s._v(" Vite")]),s._v(" "),t("p",[s._v("Vite 是一个新兴的构建工具（都vite6.0了），它凭借其出色的启动速度和热更新能力，在2024年成为了许多开发者的新宠。与传统的 Webpack 相比，"),t("code",[s._v("Vite")]),s._v(" 在开发阶段的构建速度提升了数倍，这得益于它基于原生 ES 模块（ESM）的工作原理。Vite 通过即时编译请求模块来实现快速反馈循环，并且提供了开箱即用的 "),t("code",[s._v("TypeScript")]),s._v(" 支持。此外，"),t("code",[s._v("Vite")]),s._v(" 还拥有丰富的插件生态系统，能够满足多样化的开发需求。对于 Vue 生态系统而言，"),t("code",[s._v("Vite")]),s._v(" 已经成为新项目的首选构建工具。双引擎（"),t("code",[s._v("esbuild")]),s._v("和"),t("code",[s._v("rollu")]),s._v("）")]),s._v(" "),t("h3",{attrs:{id:"webpack"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#webpack"}},[s._v("#")]),s._v(" Webpack")]),s._v(" "),t("p",[s._v("尽管有新的挑战者出现，"),t("code",[s._v("Webpack")]),s._v(" 仍然是最流行的 JavaScript 应用构建工具之一。它以其灵活性和强大的功能著称，支持模块化开发、代码分割、懒加载等功能。"),t("code",[s._v("Webpack")]),s._v(" 的插件机制允许开发者根据需要定制化构建流程，适用于各种规模的应用程序。然而，随着其他工具如 "),t("code",[s._v("Vite")]),s._v(" 的崛起，Webpack 面临着一定的竞争压力。为了保持竞争力，"),t("code",[s._v("Webpack")]),s._v(" 社区也在持续改进其性能和用户体验。")]),s._v(" "),t("h3",{attrs:{id:"rspack"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#rspack"}},[s._v("#")]),s._v(" Rspack")]),s._v(" "),t("p",[s._v("Rspack 是一款基于 Rust 编写的高性能 JavaScript 打包工具，它被设计成 Webpack 的直接替代品，并且提供了与 Webpack 生态系统的高度兼容性。这意味着开发者可以轻松地将现有的 Webpack 项目迁移到 Rspack 上，同时享受到显著的构建速度提升。根据官方提供的信息，Rspack 可以提供比 Webpack 快 5 到 10 倍的构建性能")]),s._v(" "),t("h2",{attrs:{id:"前端主流框架技术"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#前端主流框架技术"}},[s._v("#")]),s._v(" 前端主流框架技术")]),s._v(" "),t("p",[s._v("前端开发领域继续快速发展，主流框架也在不断进化以适应新的需求和技术趋势。根据最新的资料，React、Vue、Angular仍然是最受欢迎的三大前端框架，但同时一些新兴框架如Svelte和SolidJS也逐渐崭露头角。")]),s._v(" "),t("h3",{attrs:{id:"react-js"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#react-js"}},[s._v("#")]),s._v(" React.js")]),s._v(" "),t("p",[s._v("React 作为由Facebook维护的JavaScript库，在2024年依然是构建用户界面组件的强大工具。React 19版本引入了React Server Components（RSC），这是一种新的架构风格，它允许开发者编写只在服务器上运行的React组件，并且可以与客户端组件无缝协作。此外，React团队还在持续扩展其生态系统，包括React Compiler和Server Actions等功能，这些特性不仅增强了React的能力，还进一步提升了开发者的体验。React的优势在于其庞大的社区支持、丰富的插件系统以及虚拟DOM带来的性能优势。")]),s._v(" "),t("h3",{attrs:{id:"vue-js"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#vue-js"}},[s._v("#")]),s._v(" Vue.js")]),s._v(" "),t("p",[s._v("Vue 3.4版本带来了显著的技术革新，例如完全重写的解析器提高了编译速度，更快的单文件组件（SFC）编译流程，以及一个经过优化的响应式系统，提高了重新计算的效率。更重要的是，Vue正在开发中的Vapor模式，这是一种可选的、以性能为导向的编译策略，旨在生成比现有方法更高效的代码，甚至可以在所有组件中使用时消除对虚拟DOM的需求，从而减少打包大小。此外，Vue 3.4还稳定了defineModel宏，并引入了v-bind简写等新特性，进一步简化了开发过程。")]),s._v(" "),t("h3",{attrs:{id:"angular-js"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#angular-js"}},[s._v("#")]),s._v(" Angular.js")]),s._v(" "),t("p",[s._v("Angular 在2024年的更新中引入了信号机制、可延迟视图、NgOptimizedImage组件等一系列新功能，旨在提高应用性能并改善开发者体验。特别是信号机制，它提供了一种更加直观的方式来进行状态管理和组件间通信。非破坏性预加载和即将推出的部分预加载特性，则有助于加快页面加载速度，提升用户体验。尽管Angular的学习曲线较为陡峭，但对于大型复杂的企业级应用来说，Angular仍然是一个强有力的选择。")]),s._v(" "),t("h2",{attrs:{id:"脚手架-提供界面交互和基础工程模板"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#脚手架-提供界面交互和基础工程模板"}},[s._v("#")]),s._v(" 脚手架 (提供界面交互和基础工程模板)")]),s._v(" "),t("h3",{attrs:{id:"create-react-app"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#create-react-app"}},[s._v("#")]),s._v(" Create React App")]),s._v(" "),t("p",[s._v("Create React App 是官方推荐的 React 应用创建工具，它为开发者提供了一个无需配置的环境来快速搭建 React 项目。CRA 内置了对 Babel、ESLint 和 Webpack 的支持，使得开发者可以专注于业务逻辑而非繁琐的工具链设置。尽管 Vite 等新型构建工具带来了挑战，但 CRA 依然保持着广泛的用户基础，并且不断更新以适应最新的 React 版本和技术趋势。")]),s._v(" "),t("h3",{attrs:{id:"vue-cli"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#vue-cli"}},[s._v("#")]),s._v(" Vue CLI")]),s._v(" "),t("p",[s._v("Vue CLI 是 Vue.js 官方提供的命令行工具，用于生成完整的项目结构并集成常用的构建工具和库。它不仅简化了项目的初始设置，还提供了灵活的插件系统，允许开发者轻松扩展功能。Vue CLI 支持多种模板选择，包括但不限于 Webpack、Parcel 和 Vite，这让开发者可以根据具体需求做出最佳选择。特别是结合 Vite 使用时，Vue CLI 可以为开发者带来极佳的开发体验。")]),s._v(" "),t("h3",{attrs:{id:"angular-cli"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#angular-cli"}},[s._v("#")]),s._v(" Angular CLI")]),s._v(" "),t("p",[s._v("Angular CLI 是 Angular 团队维护的一个命令行界面工具，帮助开发者快速启动 Angular 应用。它集成了诸如路由配置、状态管理等常用特性，并且内置了对服务端渲染（SSR）、Progressive Web Apps (PWA) 等高级特性的支持。Angular CLI 的优势在于其紧密集成 Angular 生态系统的能力，使得开发者可以利用丰富的官方资源和文档进行高效开发。")]),s._v(" "),t("h3",{attrs:{id:"next-js"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#next-js"}},[s._v("#")]),s._v(" Next.js")]),s._v(" "),t("p",[s._v("Next.js 是一个React框架，它不仅仅是一个简单的脚手架工具，而是提供了完整的解决方案，包括服务器端渲染（SSR）、静态站点生成（SSG）、API路由等功能。Next.js 的特点是易于上手且功能强大，适合构建从简单博客到复杂电子商务平台等各种类型的Web应用。随着React Server Components 和 Server Actions 等新技术的引入，Next.js 在2024年的地位更加稳固。")]),s._v(" "),t("h3",{attrs:{id:"nuxtjs"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#nuxtjs"}},[s._v("#")]),s._v(" Nuxtjs")]),s._v(" "),t("p",[s._v("Nuxt.js 是一个基于 Vue.js 的框架，它为开发者提供了一种直观且可扩展的方式来创建类型安全、性能优越以及适合生产环境的全栈 Web 应用程序。Nuxt.js 不仅简化了服务器端渲染（SSR）和静态站点生成（SSG）应用的构建过程，还通过其内置的功能如自动路由、中间件支持、布局支持等特性极大地提升了开发效率")]),s._v(" "),t("h3",{attrs:{id:"nestjs"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#nestjs"}},[s._v("#")]),s._v(" Nestjs")]),s._v(" "),t("p",[s._v("NestJS 是一个用于构建高效、可扩展的 Node.js 服务器端应用程序的框架，它使用渐进式 JavaScript 构建，并且完全支持 TypeScript（尽管开发者仍然可以选择使用纯 JavaScript）。NestJS 的设计理念深受 Angular 框架的影响，同时借鉴了后端开发中常用的 Java 技术栈 Spring 框架的最佳实践")]),s._v(" "),t("h2",{attrs:{id:"其他"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#其他"}},[s._v("#")]),s._v(" 其他")]),s._v(" "),t("h3",{attrs:{id:"微前端架构"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#微前端架构"}},[s._v("#")]),s._v(" 微前端架构")]),s._v(" "),t("p",[s._v("微前端作为一种将大型单体应用拆分为多个独立部署的小型应用的方法，在2024年得到了广泛应用。通过采用微前端架构，企业能够实现不同团队并行开发、快速迭代的同时保持系统的灵活性和稳定性。目前流行的微前端解决方案包括qiankun、Module Federation（模块联邦）等，它们提供了不同的隔离机制和服务通信方式来满足多样化的应用场景需求。例如，Module Federation允许不同技术栈的应用共享公共模块，从而减少了冗余代码并提升了整体性能。")]),s._v(" "),t("h3",{attrs:{id:"智能化工具与ai辅助开发"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#智能化工具与ai辅助开发"}},[s._v("#")]),s._v(" 智能化工具与AI辅助开发")]),s._v(" "),t("p",[s._v("人工智能（AI）正在深刻改变前端开发的方式。AI驱动的开发工具如cursor、GitHub Copilot、CodeGeeX等已经能够在项目中自动完成一些重复性的编码任务，并根据描述自动生成代码片段或继续书写代码。这类工具不仅提高了开发效率，还降低了新手学习成本，使得开发者可以更专注于业务逻辑的设计。此外，AI还可以用于自动化测试、智能优化以及个性化用户体验等多个方面，为前端开发带来更多可能性。")]),s._v(" "),t("h3",{attrs:{id:"静态站点生成器-ssg"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#静态站点生成器-ssg"}},[s._v("#")]),s._v(" 静态站点生成器(SSG)")]),s._v(" "),t("p",[s._v("静态站点生成器（SSG）如Gatsby、Next.js、Nuxt.js等已经成为构建高效网站的重要手段之一。这些工具可以通过预渲染页面内容生成静态HTML文件，显著提高首屏加载速度并改善SEO效果。对于那些不需要频繁更新内容的企业官网或者博客类站点来说，SSG提供了一种简单且有效的解决方案。同时，结合服务端渲染（SSR），还可以兼顾动态数据展示的需求。")]),s._v(" "),t("h3",{attrs:{id:"前端性能优化"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#前端性能优化"}},[s._v("#")]),s._v(" 前端性能优化")]),s._v(" "),t("p",[s._v("随着用户期望的不断提高，性能优化成为了前端开发中的关键考虑因素。开发者需要关注资源的有效加载、动画平滑过渡、无障碍设计等方面，以确保所有用户都能获得优质的体验。具体措施包括但不限于：懒加载图片和其他非必要资源、利用CDN加速全球访问、实施缓存策略、压缩传输的数据量等。此外，Core Web Vitals等评估标准的普及促使开发者更加注重核心指标如LCP（最大内容绘制）、FID（首次输入延迟）等")])])}),[],!1,null,null,null);t.default=e.exports}}]);