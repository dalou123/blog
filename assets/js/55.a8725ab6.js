(window.webpackJsonp=window.webpackJsonp||[]).push([[55],{512:function(t,s,a){"use strict";a.r(s);var r=a(1),v=Object(r.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"mysql使用技巧"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mysql使用技巧"}},[t._v("#")]),t._v(" mysql使用技巧")]),t._v(" "),s("h2",{attrs:{id:"基本原则"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基本原则"}},[t._v("#")]),t._v(" 基本原则")]),t._v(" "),s("ol",[s("li",[t._v("不在数据库做运算")]),t._v(" "),s("li",[t._v("控制单表数据量")]),t._v(" "),s("li",[t._v("控制表字段数量")]),t._v(" "),s("li",[t._v("平衡范式与冗余")]),t._v(" "),s("li",[t._v("拒绝3B")])]),t._v(" "),s("blockquote",[s("p",[t._v("3B是指：\n"),s("br"),t._v("大SQL（BIG SQL）：要减少\n"),s("br"),t._v("大事务（BIG Transaction）\n"),s("br"),t._v("大批量（BIG Batch）")])]),t._v(" "),s("h2",{attrs:{id:"字段原则"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#字段原则"}},[t._v("#")]),t._v(" 字段原则")]),t._v(" "),s("ol",[s("li",[t._v("用好数值字段类型")])]),t._v(" "),s("blockquote",[s("p",[t._v("三类数值类型：\n"),s("br"),t._v("整型：TINYINT(1Byte)、TINYINT(1Byte)、SMALLINT(2B)、MEDIUMINT(3B)、INT(4B)、BIGINT(8B)\n"),s("br"),t._v("浮点型：FLOAT(4B)、DOUBLE(8B)、DECIMAL(M,D)")])]),t._v(" "),s("ol",{attrs:{start:"2"}},[s("li",[t._v("将字符转化为数字")])]),t._v(" "),s("blockquote",[s("p",[t._v("数字型VS字符串型索引有更多优势：\n"),s("br"),t._v(" 数字型索引的查询效率更高\n"),s("br"),t._v(" 数字型索引占用的磁盘空间更小\n"),s("br"),t._v(" 查询更快")])]),t._v(" "),s("ol",{attrs:{start:"3"}},[s("li",[t._v("避免使用NULL字段")])]),t._v(" "),s("blockquote",[s("p",[t._v("为什么在数据库表字段设计的时候尽量都加上NOT NULL DEFAULT ''，这里面不得不说用NULL字段的弊端：\n很难进行查询优化\nNULL列加索引，需要额外空间\n含NULL复合索引无效")])]),t._v(" "),s("ol",{attrs:{start:"4"}},[s("li",[t._v("不在数据库里存图片")])]),t._v(" "),s("h2",{attrs:{id:"索引原则"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#索引原则"}},[t._v("#")]),t._v(" 索引原则")]),t._v(" "),s("ol",[s("li",[t._v("谨慎合理添加索引")])]),t._v(" "),s("blockquote",[s("p",[t._v("添加索引是为了改善查询\n添加索引会减慢更新\n索引不是越多越好\n能不加的索引尽量不加（综合评估数据密度和数据分布，最好不超过字段数20%）\n结合核心SQL有限考虑覆盖索引\n举例：不要给“性别”列创建索引\n理论文章会告诉你值重复率高的字段不适合建索引。不要说性别字段只有两个值，网友亲测，一个字段使用拼音首字母做值，共有26种可能，加上索引后，百万加的数据量，使用索引的速度比不使用索引要慢！\n为什么性别不适合建索引呢？因为你访问索引需要付出额外的IO开销，你从索引中拿到的只是地址，要想真正访问到数据还是要对表进行一次IO。假如你要从表的100万行数据中取几个数据，那么利用索引迅速定位，访问索引的这IO开销就非常值了。但如果你是从100万行数据中取50万行数据，就比如性别字段，那你相对需要访问50万次索引，再访问50万次表，加起来的开销并不会比直接对表进行一次完整扫描小")])]),t._v(" "),s("ol",{attrs:{start:"2"}},[s("li",[t._v("字符字段必须建前缀索引")]),t._v(" "),s("li",[t._v("自增列或全局ID做INNODB主键")]),t._v(" "),s("li",[t._v("尽量不用外键")])]),t._v(" "),s("h2",{attrs:{id:"sql类原则"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#sql类原则"}},[t._v("#")]),t._v(" SQL类原则")]),t._v(" "),s("ol",[s("li",[t._v("SQL语句尽可能简单")])]),t._v(" "),s("blockquote",[s("p",[t._v("在开发过程中，我们尽量要保持SQL语句的简单性，我们对比一下大SQL和多个简单SQL")])]),t._v(" "),s("ul",[s("li",[t._v("传统设计思想")]),t._v(" "),s("li",[t._v("BUG MySQL NOT")]),t._v(" "),s("li",[t._v("一条SQL只能在一个CPU运算")]),t._v(" "),s("li",[t._v("5000+ QPS的高并发中，1秒大SQL意味着？")]),t._v(" "),s("li",[t._v("可能一条大SQL就把整个数据库堵死")]),t._v(" "),s("li",[t._v("简单SQL缓存命中率更高")]),t._v(" "),s("li",[t._v("减少锁表时间，特别是MyISAM")])]),t._v(" "),s("ol",{attrs:{start:"2"}},[s("li",[t._v("保持事务（连接）短小")]),t._v(" "),s("li",[t._v("尽可能避免使用SP/TRIG/FUNC")]),t._v(" "),s("li",[t._v("尽量不用SELECT *")]),t._v(" "),s("li",[t._v("改写OR为IN()")])]),t._v(" "),s("h3",{attrs:{id:"举例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#举例"}},[t._v("#")]),t._v(" 举例：")]),t._v(" "),s("p",[t._v("不推荐：")]),t._v(" "),s("div",{staticClass:"language-sql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Select")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" opp "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" phone"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'12347856'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("or")]),t._v(" phone"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'42242233'")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("推荐：")]),t._v(" "),s("div",{staticClass:"language-sql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Select")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" opp "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" phone "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("in")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'12347856'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'42242233'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])])])}),[],!1,null,null,null);s.default=v.exports}}]);