(window.webpackJsonp=window.webpackJsonp||[]).push([[66],{520:function(s,a,n){"use strict";n.r(a);var t=n(1),e=Object(t.a)({},(function(){var s=this,a=s._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"简介"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#简介"}},[s._v("#")]),s._v(" 简介")]),s._v(" "),a("p",[s._v("PM2是一个内建了负载均衡器的node进程管理工具，可以利用它来简化很多node应用管理的繁琐任务，如性能监控、自动重启、负载均衡等，而且使用非常简单。当你要把你的独立代码利用全部的服务器上的所有 CPU，并保证进程永远都活着，0 秒的重载， PM2 是完美的。")]),s._v(" "),a("h2",{attrs:{id:"pm2的作用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#pm2的作用"}},[s._v("#")]),s._v(" pm2的作用")]),s._v(" "),a("p",[s._v("目前Nodejs开发中有很多痛点，因为node本身是一个单线程应用，它的特点就是所有方法都是串行一次执行，并且node并没有能力像Java一样独自去创建一个新的线程来实现异步操作，如果在执行I/O中遇到了阻塞就会降低整个应用的执行效率，导致CPU使用率高等不利原因。")]),s._v(" "),a("p",[s._v("因此在这种模式下，一个线程只能处理一个任务，要想提高吞吐量必须通过多线程。虽然单线程的好处有很多比如避免了线程同步或者死锁、状态同步等等之类的问题，但是在应用和计算能力要求日益倍增的今天，单线程最大的弊端就是无法利用多核CPU带来的优势来提升运行效率。pm2可以把你的应用部署到服务器所有的CPU上，有效的解决这个问题")]),s._v(" "),a("h2",{attrs:{id:"特性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#特性"}},[s._v("#")]),s._v(" 特性")]),s._v(" "),a("blockquote",[a("ol",[a("li",[s._v("内建负载均衡（使用Node cluster 集群模块）")]),s._v(" "),a("li",[s._v("后台运行")]),s._v(" "),a("li",[s._v("0秒停机重载(维护升级的时候不需要停机).")]),s._v(" "),a("li",[s._v("具有Ubuntu和CentOS 的启动脚本")]),s._v(" "),a("li",[s._v("停止不稳定的进程（避免无限循环）")]),s._v(" "),a("li",[s._v("控制台检测")]),s._v(" "),a("li",[s._v("提供 HTTP API")]),s._v(" "),a("li",[s._v("远程控制和实时的接口API ( Nodejs 模块,允许和PM2进程管理器交互 )")])])]),s._v(" "),a("h2",{attrs:{id:"基本命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基本命令"}},[s._v("#")]),s._v(" 基本命令")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("// 启动命令\npm2 start app.js // 启动nodeJs应用，进程的默认名称为文件名app\npm2 start app.js--name mynode // 启动node，并指定进程名称为mynode\npm2 start app.js - i max // 根据有效CPU数目启动最大进程数目\npm2 start app.js - i "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" // 启动3个进程\npm2 start app.js--watch // 实时监控的方式启动，app.js文件有变动时，pm2会自动reload\npm2 start app.js - x // 用fork模式启动 app.js 而不是使用 cluster\npm2 start app.js - x– - a "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("23")]),s._v(" // 用fork模式启动 app.js 并且传递参数（-a "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("23")]),s._v("）\npm2 start app.json // 启动进程, 在app.json里设置选项\npm2 start app.js - i max– - a "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("23")]),s._v(" // 在 – 之后给 app.js 传递参数\npm2 start app.js - i max - e err.log - o out.log // 启动并生成一个配置文件\n \n// 查看与监视进程\npm2 list "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" pm2 "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v(" // 显示所有进程；\npm2 show "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" pm2 info "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" // 查看进程id为0的详细信息\npm2 monit // 进入监视页面，监视每个node进程的CPU和内存的使用情况\n \n// 停止、删除进程\npm2 stop "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" // 停止id为0的进程\npm2 stop all // 停止所有进程\npm2 delete "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" // 删除id为0的进程\npm2 delete all // 删除所有进程\n \n// 重启、重载\npm2 restart "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" // 重启id为0的进程\npm2 restart all // 重启所有进程\npm2 reload "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" // "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("秒停机重载id为0进程（用于 NETWORKED 进程）\npm2 reload all // 重载所有进程\n \n// 日志操作\npm2 logs // 显示所有进程的日志\npm2 logs "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" // 显示进程id为0的日志\npm2 flush // 清空所有日志文件\npm2 reloadLogs // 重载所有日志\npm2 startup // 产生init脚本，保持进程活着\n \n// 杀死PM2进程\npm2 "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("kill")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br"),a("span",{staticClass:"line-number"},[s._v("36")]),a("br"),a("span",{staticClass:"line-number"},[s._v("37")]),a("br"),a("span",{staticClass:"line-number"},[s._v("38")]),a("br")])]),a("h2",{attrs:{id:"pm2使用方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#pm2使用方式"}},[s._v("#")]),s._v(" pm2使用方式")]),s._v(" "),a("p",[s._v("使用 pm2 主要有 2 种方式：命令行、配置文件。虽然使用配置文件的方式最终仍然需要使用命令行来启动，但两者的主要区别是：\n（1）命令行方式需要将各种配置参数在命令行中输入。"),a("br"),s._v("\n（2）配置文件方式将各种配置参数放在了配置文件里面。")]),s._v(" "),a("p",[s._v("举个例子：你需要启动一个应用，并指定应用名称为 newApp，设定入口文件路径为 index.js ，我们来看看如何通过两种方式将应用名称和入口文件路径这两个参数带进去")]),s._v(" "),a("p",[s._v("命令行方式:")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("pm2 start index.js "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--name")]),s._v(" newApp\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("配置文件方式:")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 文件名为 pm2.config.js")]),s._v("\nmodule"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("exports "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("apps")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("name")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"newApp"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 应用名称")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("script")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"./index.js"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 入口文件")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("p",[s._v("然后再在命令行输入以下内容，表明以指定的配置文件启动应用")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("pm2 start pm2.config.js\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])])])}),[],!1,null,null,null);a.default=e.exports}}]);